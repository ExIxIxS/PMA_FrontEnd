@use 'sass:map';
@use '@angular/material' as mat;

@mixin color-wrapper($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette:  map.get($color-config, 'accent');
  $warn-palette:    map.get($color-config, 'warn');

  .color-item {
    display: inline-block;
    width: 30px;
    height: 30px;
    margin: 0 5px;
  }

  .color-item-primary {
    background-color:  mat.get-color-from-palette($primary-palette);
  }

  .color-item-accent {
    background-color:  mat.get-color-from-palette($accent-palette);
  }

  .color-item-warn {
    background-color:  mat.get-color-from-palette($warn-palette);
  }
}

@mixin sign-form($field-width: 290px, $margin-top: 15vh) {
  form {
    margin: $margin-top auto 0 auto;
    padding: 0;
    max-width: 400px;
    display: flex;
    flex-direction: column;
    align-items: center;

    mat-form-field {
      width: $field-width;
      margin-bottom: 20px;
    }

    mat-form-field.ng-invalid.ng-dirty{
      margin-bottom: 46px;
    }

    mat-divider {
      width: calc($field-width + 150px);
      margin: 0 0 30px 0;
    }
  }

  @media (max-width: 539px) {
    form {
      mat-divider {
        min-width: 300px;
        width: calc(100vw - 60px);
      }
    }
  }
}

@mixin all-links-text-decoration($value: none) {
  a {
    text-decoration: $value;
  }
  a:visited {
    text-decoration: $value;
  }
  a:hover, a:active, a:focus {
    text-decoration: $value;
  }

}

@mixin footer-links-color($color) {
  .footer-toolbar {
    a {
      color: $color;
    }

    a {
      color: $color;
    }

    a:hover, a:active, a:focus {
      color:$color;
    }
  }

  #github-logo {
    fill: $color;
  }

}

@mixin text-link($color) {
  a.text-link {
    color: $color;
  }

  a.text-link {
    color: $color;
  }

  a.text-link:hover, a.text-link:active, a.text-link:focus {
    color:$color;
  }
}

@mixin links-color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $is-dark-theme: map.get($color-config, 'is-dark');
  $color: #000;
  $contrast: mat.get-color-from-palette($primary-palette, 900-contrast);

  @if $is-dark-theme {
    $color: mat.get-color-from-palette($primary-palette, 900-contrast);
  } @else {
    $color: mat.get-color-from-palette($primary-palette, A100-contrast);
  }

  @include all-links-text-decoration();
  @include text-link($color);
  @include footer-links-color($contrast);

}

@mixin search-color($theme) {
  $color-config: mat.get-color-config($theme);
  $is-dark-theme: map.get($color-config, 'is-dark');
  $primary-palette: map.get($color-config, 'primary');
  $background-contrast: mat.get-color-from-palette($primary-palette, 50-contrast);
  $background-color: rgba($background-contrast, 0.1);

  @if $is-dark-theme {
    $background-color: rgba($background-contrast, 0.4);
  }

  .search-results {
    background-color: $background-color;
  }

}

@mixin column-color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $is-dark-theme: map.get($color-config, 'is-dark');
  $contrast: mat.get-color-from-palette($primary-palette, A100-contrast);
  $task-background-color: mat.get-color-from-palette($primary-palette, 50);
  $task-border-color: mat.get-color-from-palette($primary-palette, 900-contrast);

  @if $is-dark-theme {
    $contrast: mat.get-color-from-palette($primary-palette, 900-contrast);
    $task-background-color: mat.get-color-from-palette($primary-palette, 700);
    $task-border-color: $contrast;
  }

  .title-container .title-form-field .column-title-input {
    color: $contrast;
  }

  .board-column .tasks-list {
    background: $task-background-color;
    border-color: $task-border-color;

    .tasks-list-item {
      background: $task-background-color;
      border-color: $task-border-color;
    }
  }
}

@mixin theme-menu-colors($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $background-contrast: mat.get-color-from-palette($primary-palette, 50-contrast);
  $background-color: rgba($background-contrast, 0.05);

  .color-theme-button {
    background-color: $background-color;
  }
}

@mixin default-theme($theme) {
  @include mat.all-component-themes($theme);
  @include links-color($theme);
  @include search-color($theme);
  @include column-color($theme);
  @include theme-menu-colors($theme)
}

@mixin additional-theme($theme) {
  @include mat.all-component-colors($theme);
  @include links-color($theme);
  @include search-color($theme);
  @include column-color($theme);
  @include theme-menu-colors($theme)
}
